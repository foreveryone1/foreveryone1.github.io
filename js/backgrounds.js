"use strict";class BackgroundPage extends ListPage{constructor(){const a=new PageFilterBackgrounds;super({dataSource:"data/backgrounds.json",dataSourceFluff:"data/fluff-backgrounds.json",pageFilter:a,listClass:"backgrounds",sublistClass:"subbackgrounds",dataProps:["background"]})}getListItem(a,b,c){this._pageFilter.mutateAndAddToFilters(a,c);const d=document.createElement("li");d.className=`row ${c?"row--blacklisted":""}`;const e=a.name.replace("Variant ",""),f=UrlUtil.autoEncodeHash(a),g=Parser.sourceJsonToAbv(a.source);d.innerHTML=`<a href="#${f}" class="lst--border">
			<span class="bold col-4 pl-0">${e}</span>
			<span class="col-6">${a._skillDisplay}</span>
			<span class="col-2 text-center ${Parser.sourceJsonToColor(a.source)}" title="${Parser.sourceJsonToFull(a.source)} pr-0" ${BrewUtil.sourceJsonToStyle(a.source)}>${g}</span>
		</a>`;const h=new ListItem(b,d,e,{hash:f,source:g,skills:a._skillDisplay},{uniqueId:a.uniqueId||b,isExcluded:c});return d.addEventListener("click",a=>this._list.doSelect(h,a)),d.addEventListener("contextmenu",a=>ListUtil.openContextMenu(a,this._list,h)),h}handleFilterChange(){const a=this._filterBox.getValues();this._list.filter(b=>this._pageFilter.toDisplay(a,this._dataList[b.ix])),FilterBox.selectFirstVisible(this._dataList)}getSublistItem(a,b){const c=a.name.replace("Variant ",""),d=UrlUtil.autoEncodeHash(a),e=Renderer.background.getSkillSummary(a.skillProficiencies||[],!0),f=$$`<li class="row">
			<a href="#${d}" class="lst--border">
				<span class="bold col-4 pl-0">${c}</span>
				<span class="col-8 pr-0">${e}</span>
			</a>
		</li>`.contextmenu(a=>ListUtil.openSubContextMenu(a,g)),g=new ListItem(b,f,c,{hash:d,source:Parser.sourceJsonToAbv(a.source),skills:e});return g}doLoadHash(a){this._renderer.setFirstSection(!0);const b=$("#pagecontent").empty(),c=this._dataList[a],d=a=>Renderer.utils.pBuildFluffTab(a,b,c,a=>c.fluff||a.backgroundFluff.find(a=>a.name===c.name&&a.source===c.source),this._dataSourcefluff,()=>!0),e=Renderer.utils.tabButton("Traits",()=>{},()=>{b.append(RenderBackgrounds.$getRenderedBackground(c))}),f=Renderer.utils.tabButton("Info",()=>{},d),g=Renderer.utils.tabButton("Images",()=>{},d.bind(null,!0));Renderer.utils.bindTabButtons(e,f,g),ListUtil.updateSelected()}async pDoLoadSubHash(a){a=this._filterBox.setFromSubHashes(a),await ListUtil.pSetFromSubHashes(a)}}const backgroundsPage=new BackgroundPage;window.addEventListener("load",()=>backgroundsPage.pOnLoad());