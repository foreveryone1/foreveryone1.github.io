"use strict";class SchoolConvert{static tryConvertSchool(a,b){const c=(a.school||"").toLowerCase().trim();if(!c)return b?b(a.school,"Spell school requires manual conversion"):null;const d=SchoolConvert._RES_SCHOOL.find(a=>a.regex.test(c));d?a.school=d:b(a.school,"Spell school requires manual conversion")}}SchoolConvert._RES_SCHOOL=[],Object.entries({transmutation:"T",necromancy:"N",conjuration:"C",abjuration:"A",enchantment:"E",evocation:"V",illusion:"I",divination:"D"}).forEach(([a,b])=>{SchoolConvert._RES_SCHOOL.push({output:b,regex:RegExp(a,"i")})});class SpellConverter extends BaseConverter{constructor(a){super(a,{converterId:"Spell",canSaveLocal:!0,modes:["txt"],hasPageNumbers:!0,titleCaseFields:["name"],hasSource:!0,prop:"spell"})}_renderSidebar(a,b){b.empty()}handleParse(a,b,c,d){switch(this._state.mode){case"txt":return this.doParseText(a,{cbWarning:c,cbOutput:b,isAppend:d});default:throw new Error(`Unimplemented!`);}}_getSample(a){switch(a){case"txt":return SpellConverter.SAMPLE_TEXT;default:throw new Error(`Unknown format "${a}"`);}}static getTimeUnit(a){return"instantaneous"===a.toLowerCase()?"instant":a.toLowerCase().endsWith("s")?a.toLowerCase().substring(0,a.length-1):a.toLowerCase()}static getDistanceUnit(a){return a=a.toLowerCase(),"foot"===a?"feet":a}doParseText(a,b){function c(){if(h){if(h.trim().endsWith(",")){const a=d[++f];return!!a&&(h=`${h.trim()} ${a.trim()}`,!0)}const a=d[f+1];return!!a&&!ConvertUtil.isNameLine(a)&&!["CASTING TIME","RANGE","COMPONENTS","DURATION","CLASSES","AT HIGHER LEVELS"].some(b=>a.toUpperCase().startsWith(b))&&(f++,h=`${h.trim()} ${a.trim()}`,!0)}return!1}if(b=BaseConverter._getValidOptions(b),!a||!a.trim())return b.cbWarning("No input!");const d=(()=>{const b=this._getCleanInput(a);return b.split("\n").filter(a=>a&&a.trim())})(),e={};e.source=this._state.source,e.page=this._state.page;let f,g=null,h=null;for(f=0;f<d.length;f++){if(g=h,h=d[f].trim(),""===h)continue;if(0===f){e.name=this._getAsTitle("name",h);continue}if(1===f){SpellConverter._setCleanLevelSchoolRitual(e,h,b);continue}if(2===f){SpellConverter._setCleanCastingTime(e,h);continue}if(!h.indexOf_handleColon("Range")){SpellConverter._setCleanRange(e,h);continue}if(!h.indexOf_handleColon("Components")){SpellConverter._setCleanComponents(e,h,b);continue}if(!h.indexOf_handleColon("Duration")){SpellConverter._setCleanDuration(e,h,b);continue}if(!h.indexOf_handleColon("Classes")||!h.indexOf_handleColon("Class")){SpellConverter._setCleanClasses(e,h,b);continue}let a=!0;for(e.entries=[];f<d.length;){if(!h.indexOf_handleColon("At Higher Levels.")||!h.indexOf_handleColon("At Higher Levels")){for(a=!1;c(!0););SpellConverter._setCleanHigherLevel(e,h)}else a&&e.entries.push(h);f++,h=d[f]}}this._doSpellPostProcess(e,b);const j=PropOrder.getOrdered(e,"spell");b.cbOutput(j,b.isAppend)}_doSpellPostProcess(a,b){TagCondition.tryTagConditions(a),DamageTypeTag.tryRun(a),(()=>{Object.keys(a).forEach(b=>{a[b]instanceof Array&&0===a[b].length&&delete a[b]})})()}static _setCleanLevelSchoolRitual(a,b){const c=/^(\d)(?:st|nd|rd|th)(-?|\s)(\S+)\s+(\w+)(\s?)(\(ritual\))?/gi.exec(b.trim());c?(a.level=c[1],a.school=c[4].trim(),SchoolConvert.tryConvertSchool(a),/ritual/i.exec(c[6])&&(a.meta={ritual:!0})):(a.level=0,a.school=b.split(" ")[0],SchoolConvert.tryConvertSchool(a))}static _setCleanRange(a,b){const c=b.split_handleColon("Range",1)[1];if(/touch/gi.exec(c.trim()))a.range={type:"point",distance:{type:"touch"}};else if(/self/gi.exec(c.trim())){if(!/foot/gi.exec(c.trim()))a.range={type:"point",distance:{type:"self"}};else if(/radius/gi.exec(c.trim())){const b=c.split(/[\s-()]+/);a.range={type:"radius",distance:{type:SpellConverter.getDistanceUnit(b[2]),amount:+b[1]}}}else if(/cone/gi.exec(c.trim())){const b=c.split(/[\s-()]+/);a.range={type:"cone",distance:{type:SpellConverter.getDistanceUnit(b[2]),amount:+b[1]}}}else if(/line/gi.exec(c.trim())){const b=c.split(/[\s-()]+/);a.range={type:"line",distance:{type:SpellConverter.getDistanceUnit(b[2]),amount:+b[1]}}}}else if(/feet/gi.exec(c.trim())){const b=c.split(/[\s-()]+/);a.range={type:"point",distance:{type:SpellConverter.getDistanceUnit(b[1]),amount:+b[0]}}}else a.range={type:c.split(/[\s-()]+/)}}static _setCleanCastingTime(a,b){const c=b.split_handleColon("Casting Time",1)[1].trim();if(/^([0-9]+)/.exec(c)){const b=c.split(" ")[0].trim(),d=c.replace(/[0-9]/g,"").trim();if(1<d.split(" ").length){const c=d.match(/^(\S+)\s(.*)/).slice(1);c[0]=c[0].replace(/,/,""),a.time=[{number:+b,unit:SpellConverter.getTimeUnit(c[0]),condition:c[1]}]}else a.time=[{number:+b,unit:SpellConverter.getTimeUnit(d)}]}else a.time=[{unit:time}]}static _setCleanComponents(a,b,c){const d=b.split_handleColon("Components",1)[1].trim(),e=d.split(/,\s?(?![^(]*\))/gi);a.components={};for(let f=0;e.length>f;f++)if(/^v/i.exec(e[f].trim()))a.components.v=!0;else if(/^s/i.exec(e[f].trim()))a.components.s=!0;else if(/^m/i.test(e[f].trim()))try{const b=/\(.+\)/.exec(e[f])[0].replace(/[()]/g,""),c=/\d*,?\d+\s?(?:cp|sp|ep|gp|pp)/gi.exec(/\(.+\)/.exec(e[f].trim())),d=/consume/i.exec(e[f].trim());a.components.m=c&&d?{text:b,cost:+c[0].split(" ")[0].replace(/,/g,""),consume:!0}:c?{text:b,cost:+c[0].split(" ")[0].replace(/,/g,"")}:b}catch(a){c.cbWarning(`Alignment "${d}" requires manual conversion`)}}static _setCleanDuration(a,b,c){const d=b.split_handleColon("Duration",1)[1].trim(),e=/^(Concentration)/gi.exec(d.trim()),f=/^(Instantaneous)/gi.exec(d.trim()),g=/^(Until dispelled)/gi.exec(d.trim()),h=/^(special)/gi.exec(d.trim());if(e){const b=d.match(/\d+\s+[a-z]+/i),c=b[0].split(" ");a.duration=[{type:"timed",duration:{type:SpellConverter.getTimeUnit(c[1]),amount:+c[0]},concentration:!0}]}else if(f)a.duration=[{type:"instant"}];else if(g){const b=/(triggered)/gi.exec(d.trim());a.duration=b?[{type:"permanent",ends:["dispel","trigger"]}]:[{type:"permanent",ends:["dispel"]}]}else if(h)a.duration=[{type:"special"}];else{const b=/\d+\s+[a-z]+/gi.exec(d.trim());if(b){const b=d.match(/\d+\s+[a-z]+/i),c=b[0].split(" ");a.duration=[{type:"timed",duration:{type:SpellConverter.getTimeUnit(c[1]),amount:+c[0]}}]}else;}}static _setCleanClasses(a,b,c){let d=/^(Classes)/i.test(b)?b.split_handleColon("Classes",1)[1].trim():b.split_handleColon("Class",1)[1].trim();const e=d.split(/,\s*/i),f=[];for(let d=0;e.length>d;d++)e[d]=e[d].uppercaseFirst(),"Artificer"===e[d]?f.push({name:e[d].uppercaseFirst(),source:"ERLW"}):f.push({name:e[d].uppercaseFirst(),source:"PHB"});a.classes={fromClassList:f}}static _setCleanHigherLevel(a,b){const c=b.split_handleColon("At Higher Levels.",1)[1].trim();a.entriesHigherLevel||(a.entriesHigherLevel=[{type:"entries",name:"At Higher Levels",entries:[c]}])}}SpellConverter.SAMPLE_TEXT=`Chromatic Orb
1st-level evocation
Casting Time: 1 action
Range: 90 feet
Components: V, S, M (a diamond worth at least 50 gp)
Duration: Instantaneous

You hurl a 4-inch-diameter sphere of energy at a creature that you can see within range. You choose acid, cold, fire, lightning, poison, or thunder for the type of orb you create, and then make a ranged spell attack against the target. If the attack hits, the creature takes 3d8 damage of the type you chose.

At Higher Levels. When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d8 for each slot level above 1st.`;