"use strict";function getHiddenModeList(a){const b=a.modes;if(b===void 0)return"";const c=[];for(let d=0;d<b.length;++d)if(c.push(`"${b[d].name}"`),null!=b[d].submodes){const a=b[d].submodes;for(let b=0;b<a.length;++b)c.push(`"${a[b].name}"`)}return c.join(",")}class PsionicsPage extends ListPage{constructor(){const a=new PageFilterPsionics;super({dataSource:"data/psionics.json",pageFilter:a,listClass:"psionics",sublistClass:"subpsionics",dataProps:["psionic"],bookViewOptions:{$btnOpen:$(`#btn-psibook`),noneVisibleMsg:"If you wish to view multiple psionics, please first make a list",pageTitle:"Psionics Book View",popTblGetNumShown:a=>{const b=ListUtil.getSublistedIds().map(a=>this._dataList[a]),c=[],d=a=>{c.push(`<div class="bkmv__wrp-item"><table class="stats stats--book stats--bkmv"><tbody>`),c.push(Renderer.psionic.getCompactRenderedString(a)),c.push(`</tbody></table></div>`)},e=a=>{const c=b.filter(b=>b.type===a);c.length&&c.forEach(a=>d(a))};return e("T"),e("D"),b.length||null==Hist.lastLoadedId||d(this._dataList[Hist.lastLoadedId]),b.length||null==Hist.lastLoadedId||(c.push(`<tr class="spellbook-level"><td>`),d(this._dataList[Hist.lastLoadedId]),c.push(`</td></tr>`)),a.append(c.join("")),b.length}},tableViewOptions:{title:"Psionics",colTransforms:{name:{name:"Name",transform:!0},source:{name:"Source",transform:a=>`<span class="${Parser.sourceJsonToColor(a)}" title="${Parser.sourceJsonToFull(a)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${Parser.sourceJsonToAbv(a)}</span>`},_text:{name:"Text",transform:a=>Renderer.psionic.getBodyText(a,Renderer.get()),flex:3}},filter:{generator:ListUtil.basicFilterGenerator},sorter:(c,a)=>SortUtil.ascSort(c.name,a.name)||SortUtil.ascSort(c.source,a.source)}})}getListItem(a,b,c){this._pageFilter.mutateAndAddToFilters(a,c);const d=document.createElement("li");d.className=`row ${c?"row--blacklisted":""}`;const e=Parser.sourceJsonToAbv(a.source),f=UrlUtil.autoEncodeHash(a),g=Parser.psiTypeToMeta(a.type);d.innerHTML=`<a href="#${f}" class="lst--border">
			<span class="bold col-6 pl-0">${a.name}</span>
			<span class="col-2">${g.short}</span>
			<span class="col-2 ${a._fOrder===STR_NONE?"list-entry-none":""}">${a._fOrder}</span>
			<span class="col-2 text-center pr-0" title="${Parser.sourceJsonToFull(a.source)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${e}</span>
		</a>`;const h=new ListItem(b,d,a.name,{hash:f,source:e,type:g.full,order:a._fOrder,searchModeList:getHiddenModeList(a)},{uniqueId:a.uniqueId?a.uniqueId:b,isExcluded:c});return d.addEventListener("click",a=>this._list.doSelect(h,a)),d.addEventListener("contextmenu",a=>ListUtil.openContextMenu(a,this._list,h)),h}handleFilterChange(){const a=this._filterBox.getValues();this._list.filter(b=>this._pageFilter.toDisplay(a,this._dataList[b.ix])),FilterBox.selectFirstVisible(this._dataList)}getSublistItem(a,b){const c=UrlUtil.autoEncodeHash(a),d=Parser.psiTypeToMeta(a.type),e=$(`<li class="row">
			<a href="#${c}" class="lst--border">
				<span class="bold col-6 pl-0">${a.name}</span>
				<span class="col-3">${d.short}</span>
				<span class="col-3 ${a._fOrder===STR_NONE?"list-entry-none":""} pr-0">${a._fOrder}</span>
			</a>
		</li>`).contextmenu(a=>ListUtil.openSubContextMenu(a,f)),f=new ListItem(b,e,a.name,{hash:c,type:d.full,order:a._fOrder});return f}doLoadHash(a){const b=this._dataList[a];$(`#pagecontent`).empty().append(RenderPsionics.$getRenderedPsionic(b)),ListUtil.updateSelected()}async pDoLoadSubHash(a){a=this._filterBox.setFromSubHashes(a),await ListUtil.pSetFromSubHashes(a),this._bookView.handleSub(a)}}const psionicsPage=new PsionicsPage;window.addEventListener("load",()=>psionicsPage.pOnLoad());