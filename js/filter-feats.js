"use strict";class PageFilterFeats extends PageFilter{constructor(){super(),this._asiFilter=getAsiFilter(),this._otherPrereqFilter=new Filter({header:"Other",items:["Ability","Race","Proficiency","Special","Spellcasting"]}),this._levelFilter=new Filter({header:"Level",itemSortFn:SortUtil.ascSortNumericalSuffix}),this._prerequisiteFilter=new MultiFilter({header:"Prerequisite",filters:[this._otherPrereqFilter,this._levelFilter]}),this._miscFilter=new Filter({header:"Miscellaneous",items:["SRD"]})}mutateForFilters(a){const b=Renderer.getAbilityData(a.ability);a._fAbility=b.asCollection.filter(c=>!b.areNegative.includes(c));const c=Renderer.utils.getPrerequisiteText(a.prerequisite,!0)||STR_NONE,d=new Set;(a.prerequisite||[]).forEach(a=>d.add(...Object.keys(a))),a._fPrereqOther=[...d].map(a=>("other"===a?"special":a).uppercaseFirst()),a.prerequisite&&(a._fPrereqLevel=a.prerequisite.filter(a=>null!=a.level).map(a=>`Level ${a.level.level}`)),a._fMisc=a.srd?["SRD"]:[],a._slAbility=b.asText||STR_NONE,a._slPrereq=c}addToFilters(a,b){b||(this._sourceFilter.addItem(a.source),a.prerequisite&&this._levelFilter.addItem(a._fPrereqLevel))}async _pPopulateBoxOptions(a){a.filters=[this._sourceFilter,this._asiFilter,this._prerequisiteFilter,this._miscFilter]}toDisplay(a,b){return this._filterBox.toDisplay(a,b.source,b._fAbility,[b._fPrereqOther,b._fPrereqLevel],b._fMisc)}}