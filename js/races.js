"use strict";class RacesPage extends ListPage{constructor(){const a=new PageFilterRaces;super({dataSource:async()=>{const a=await DataUtil.loadJSON("data/races.json"),b=Renderer.race.mergeSubraces(a.race,{isAddBaseRaces:!0});return{race:b}},dataSourceFluff:"data/fluff-races.json",pageFilter:a,listClass:"races",sublistClass:"subraces",dataProps:["race"],hasAudio:!0})}_addData(a){if(a.race&&a.race.length&&super._addData(a),a.subrace&&a.subrace.length){const b=Renderer.race.adoptSubraces(this._dataList,a.subrace);b.length&&this._addData({race:Renderer.race.mergeSubraces(b)})}}getListItem(a,b,c){this._pageFilter.mutateAndAddToFilters(a,c);const d=a.ability?Renderer.getAbilityData(a.ability):{asTextShort:"None"},e=/^(.*?) \((.*?)\)$/.exec(a.name),f=document.createElement("li");f.className=`row ${c?"row--blacklisted":""}`;const g=UrlUtil.autoEncodeHash(a),h=Parser.sizeAbvToFull(a.size),i=Parser.sourceJsonToAbv(a.source);f.innerHTML=`<a href="#${g}" class="lst--border">
			<span class="bold col-4 pl-0">${a.name}</span>
			<span class="col-4">${d.asTextShort}</span>
			<span class="col-2">${h}</span>
			<span class="col-2 text-center ${Parser.sourceJsonToColor(a.source)} pr-0" title="${Parser.sourceJsonToFull(a.source)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${i}</span>
		</a>`;const j=new ListItem(b,f,a.name,{hash:g,ability:d.asTextShort,size:h,source:i,cleanName:e?`${e[2]} ${e[1]}`:""},{uniqueId:a.uniqueId?a.uniqueId:b,isExcluded:c});return f.addEventListener("click",a=>this._list.doSelect(j,a)),f.addEventListener("contextmenu",a=>ListUtil.openContextMenu(a,this._list,j)),j}handleFilterChange(){const a=this._pageFilter.filterBox.getValues();this._list.filter(b=>this._pageFilter.toDisplay(a,this._dataList[b.ix])),FilterBox.selectFirstVisible(this._dataList)}getSublistItem(a,b){const c=UrlUtil.autoEncodeHash(a),d=$(`
			<li class="row">
				<a href="#${UrlUtil.autoEncodeHash(a)}" class="lst--border">
					<span class="bold col-5 pl-0">${a.name}</span>
					<span class="col-5">${a._slAbility}</span>
					<span class="col-2 pr-0">${Parser.sizeAbvToFull(a.size)}</span>
				</a>
			</li>
		`).contextmenu(a=>ListUtil.openSubContextMenu(a,e)),e=new ListItem(b,d,a.name,{hash:c,ability:a._slAbility});return e}doLoadHash(a){function b(a){return Renderer.utils.pBuildFluffTab(a,e,f,c,`data/fluff-races.json`,()=>!0)}function c(a){const b=Renderer.utils.getPredefinedFluff(f,"raceFluff");if(b)return b;const c=a.raceFluff.find(a=>a.name.toLowerCase()===f.name.toLowerCase()&&a.source.toLowerCase()===f.source.toLowerCase()),d=f._baseName&&f.name.toLowerCase()===f._baseName.toLowerCase()?"":a.raceFluff.find(a=>f._baseName&&a.name.toLowerCase()===f._baseName.toLowerCase()&&f._baseSource&&a.source.toLowerCase()===f._baseSource.toLowerCase());if(!c&&!d)return null;const e=b=>a.raceFluff.find(a=>b.name.toLowerCase()===a.name.toLowerCase()&&b.source.toLowerCase()===a.source.toLowerCase()),g={type:"section"},h=(a,b)=>{if(a.entries&&!(b&&c&&c._excludeBaseEntries)){g.entries=g.entries||[];const c={type:"section",entries:MiscUtil.copy(a.entries)};b&&!a.entries.length&&(c.name=f._baseName),g.entries.push(c)}if(a.images&&!(b&&c&&c._excludeBaseImages)&&(g.images=g.images||[],g.images.push(...MiscUtil.copy(a.images))),a._appendCopy){const c=e(a._appendCopy);if(c.entries){g.entries=g.entries||[];const d={type:"section",entries:MiscUtil.copy(c.entries)};b&&!a.entries.length&&(d.name=f._baseName),g.entries.push(d)}c.images&&(g.images=g.images||[],g.images.push(...MiscUtil.copy(c.images)))}};if(c&&h(c),d&&h(d,!0),c&&c.uncommon||d&&d.uncommon){const b={type:"section",entries:[MiscUtil.copy(a.meta.uncommon)]};g.entries?g.entries.push(b):(g.entries=[Renderer.utils.HTML_NO_INFO],g.entries.push(...b.entries))}if(c&&c.monstrous||d&&d.monstrous&&(!c||null==c.monstrous||c.monstrous)){const b={type:"section",entries:[MiscUtil.copy(a.meta.monstrous)]};g.entries?g.entries.push(b):(g.entries=[Renderer.utils.HTML_NO_INFO],g.entries.push(...b.entries))}if(g.entries&&g.entries.length&&"section"===g.entries[0].type){const a=g.entries.splice(0,1)[0];g.entries.unshift(...a.entries)}return g}const d=this._renderer;d.setFirstSection(!0);const e=$("#pagecontent").empty(),f=this._dataList[a],g=Renderer.utils.tabButton("Traits",()=>{},function(){e.append(RenderRaces.$getRenderedRace(f))}),h=Renderer.utils.tabButton("Info",()=>{},b),i=Renderer.utils.tabButton("Images",()=>{},b.bind(null,!0));Renderer.utils.bindTabButtons(g,h,i),ListUtil.updateSelected()}async pDoLoadSubHash(a){a=this._filterBox.setFromSubHashes(a),await ListUtil.pSetFromSubHashes(a)}}const racesPage=new RacesPage;window.addEventListener("load",()=>racesPage.pOnLoad());