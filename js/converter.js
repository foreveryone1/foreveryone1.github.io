"use strict";window.onload=doPageInit;class ConverterUiUtil{static renderSideMenuDivider(a,b){a.append(`<hr class="sidemenu__row__divider ${b?"sidemenu__row__divider--heavy":""}">`)}}class BaseConverter extends BaseComponent{static _getDisplayMode(a){switch(a){case"html":return"HTML";case"md":return"Markdown";case"txt":return"Text";default:throw new Error(`Unimplemented!`);}}static _getValidOptions(a){if(a=a||{},!a.cbWarning||!a.cbOutput)throw new Error(`Missing required callback options!`);return a}constructor(a,b){super(),this._ui=a,this._converterId=b.converterId,this._canSaveLocal=!!b.canSaveLocal,this._modes=b.modes,this._hasPageNumbers=b.hasPageNumbers,this._titleCaseFields=b.titleCaseFields,this._hasSource=b.hasSource,this._prop=b.prop,this._state.mode=this._modes[0],this._hasPageNumbers&&(this._state.page=0),this._titleCaseFields&&(this._state.isTitleCase=!1),this._hasSource&&(this._state.source=""),this._addHookAll("state",this._ui.saveSettingsDebounced)}get converterId(){return this._converterId}get canSaveLocal(){return this._canSaveLocal}get prop(){return this._prop}renderSidebar(a,b){const c=$(`<div class="w-100 flex-col"/>`).appendTo(b),d=()=>c.toggleClass("hidden",a.get("converter")!==this._converterId);a.addHook("converter",d),d(),this._renderSidebar(a,c),this._renderSidebarSamplesPart(a,c),this._renderSidebarConverterOptionsPart(a,c),this._renderSidebarPagePart(a,c),this._renderSidebarSourcePart(a,c)}_renderSidebar(){throw new Error("Unimplemented!")}handleParse(){throw new Error("Unimplemented!")}_getSample(){throw new Error("Unimplemented!")}_renderSidebarSamplesPart(a,b){const c=this._modes.map(a=>$(`<button class="btn btn-sm btn-default">Sample ${BaseConverter._getDisplayMode(a)}</button>`).click(()=>{this._ui.inText=this._getSample(a),this._state.mode=a}));$$`<div class="sidemenu__row flex-vh-center-around">${c}</div>`.appendTo(b),ConverterUiUtil.renderSideMenuDivider(b)}_renderSidebarConverterOptionsPart(a,b){const c=1<this._modes.length;if(c||this._titleCaseFields){if(c){const a=ComponentUiUtil.$getSelEnum(this,"mode",{values:this._modes,html:`<select class="form-control input-sm select-inline"/>`,fnDisplay:a=>`Parse as ${BaseConverter._getDisplayMode(a)}`});$$`<div class="sidemenu__row flex-vh-center-around">${a}</div>`.appendTo(b)}if(this._titleCaseFields){const a=ComponentUiUtil.$getCbBool(this,"isTitleCase");$$`<div class="sidemenu__row split-v-center">
				<label class="sidemenu__row__label sidemenu__row__label--cb-label" title="Should the creature's name be converted to title-case? Useful when pasting a name which is all-caps."><span>Title-Case Name</span>
				${a}
			</label></div>`.appendTo(b)}ConverterUiUtil.renderSideMenuDivider(b)}}_renderSidebarPagePart(a,b){if(this._hasPageNumbers){const a=ComponentUiUtil.$getIptInt(this,"page",0,{html:`<input class="form-control input-sm text-right" style="max-width: 9rem;">`});$$`<div class="sidemenu__row split-v-center"><div class="sidemenu__row__label">Page</div>${a}</div>`.appendTo(b),ConverterUiUtil.renderSideMenuDivider(b)}}_renderSidebarSourcePart(a,b){if(!this._hasSource)return;const c=$(`<div class="h-100 w-100"/>`);let d=null;const e=b=>{SourceUiUtil.render({...b,$parent:c,cbConfirm:c=>{const e="edit"!==b.mode;e?BrewUtil.addSource(c):BrewUtil.updateSource(c),e&&a.set("availableSources",[...a.get("availableSources"),c.json]),this._state.source=c.json,d&&d.doClose()},cbConfirmExisting:a=>{this._state.source=a.json,d&&d.doClose()},cbCancel:()=>{d&&d.doClose()}})},f=$$`
			<select class="form-control input-sm"><option value="">(None)</option></select>`.change(()=>this._state.source=f.val()),g=()=>f.val(this._state.source);g(),this._addHookBase("source",g);const h=()=>{const b=new Set(f.find(`option`).map((a,b)=>$(b).val()));b.add("");const c=new Set(a.get("availableSources"));c.add(""),a.get("availableSources").forEach(a=>{const d=BrewUtil.sourceJsonToSource(a);c.add(a),b.has(a)||$(`<option/>`,{val:d.json,text:d.full}).appendTo(f)});const d=CollectionUtil.setDiff(b,c);d.size&&f.find(`option`).filter((a,b)=>d.has($(b).val())).remove()};a.addHook("availableSources",h),h(),$$`<div class="sidemenu__row split-v-center"><div class="sidemenu__row__label">Source</div>${f}</div>`.appendTo(b);const i=$(`<button class="btn btn-default btn-sm mr-2">Edit Selected Source</button>`).click(()=>{const a=this._state.source;if(!a)return void JqueryUtil.doToast({type:"warning",content:"No source selected!"});const b=BrewUtil.sourceJsonToSource(a);b&&(e({mode:"edit",source:MiscUtil.copy(b)}),d=UiUtil.getShowModal({fullHeight:!0,isLarge:!0,cbClose:()=>c.detach()}),c.appendTo(d.$modalInner))});$$`<div class="sidemenu__row">${i}</div>`.appendTo(b);const j=$(`<button class="btn btn-default btn-sm">Add New Source</button>`).click(()=>{e({mode:"add"}),d=UiUtil.getShowModal({fullHeight:!0,isLarge:!0,cbClose:()=>c.detach()}),c.appendTo(d.$modalInner)});$$`<div class="sidemenu__row">${j}</div>`.appendTo(b),ConverterUiUtil.renderSideMenuDivider(b)}_getAsTitle(a,b){return this._titleCaseFields&&this._titleCaseFields.includes(a)&&this._state.isTitleCase?b.toLowerCase().toTitleCase():b}_getCleanInput(a){return a.replace(/[−–‒]/g,"-")}static _hasEntryContent(a){return a&&(a.name||1===a.entries.length&&a.entries[0]||1<a.entries.length)}}class ConverterUi extends BaseComponent{constructor(){super(),this._editorIn=null,this._editorOut=null,this._converters={},this._saveInputDebounced=MiscUtil.debounce(()=>StorageUtil.pSetForPage(ConverterUi.STORAGE_INPUT,this._editorIn.getValue()),50),this.saveSettingsDebounced=MiscUtil.debounce(()=>StorageUtil.pSetForPage(ConverterUi.STORAGE_STATE,this.getBaseSaveableState()),50),this._addHookAll("state",()=>this.saveSettingsDebounced())}set converters(a){this._converters=a}get activeConverter(){return this._converters[this._state.converter]}getBaseSaveableState(){return{...super.getBaseSaveableState(),...Object.values(this._converters).mergeMap(a=>({[a.converterId]:a.getBaseSaveableState()}))}}async pInit(){const a=await StorageUtil.pGetForPage(ConverterUi.STORAGE_STATE);a&&(this.setBaseSaveableStateFrom(a),Object.values(this._converters).forEach(b=>b.setBaseSaveableStateFrom(a[b.converterId]))),this._state.availableSources=(BrewUtil.homebrewMeta.sources||[]).sort((c,a)=>SortUtil.ascSortLower(c.full,a.full)).map(a=>a.json),this._state.hasAppended=!1,this._editorIn=ace.edit("converter_input"),this._editorIn.setOptions({wrap:!0,showPrintMargin:!1});try{const a=await StorageUtil.pGetForPage(ConverterUi.STORAGE_INPUT);a&&this._editorIn.setValue(a,-1)}catch(a){setTimeout(()=>{throw a})}this._editorIn.on("change",()=>this._saveInputDebounced()),this._editorOut=ace.edit("converter_output"),this._editorOut.setOptions({wrap:!0,showPrintMargin:!1,readOnly:!0}),$(`#editable`).click(()=>{confirm(`Edits will be overwritten as you parse new statblocks. Enable anyway?`)&&(this._outReadOnly=!1)});const b=$(`#save_local`).click(async()=>{const a=this._outText;if(a&&a.trim())try{const b=this.activeConverter.prop,c=JSON.parse(`[${a}]`),d=c.map(a=>!(a.source&&BrewUtil.hasSourceJson(a.source))&&(a.name||a.caption||"(Unnamed)").trim()).filter(Boolean);if(d.length)return void JqueryUtil.doToast({content:`One or more entries have missing or unknown sources: ${d.join(", ")}`,type:"danger"});const e={},f=[],g=c.map(a=>{const b=a.source.toLowerCase(),c=a.name.toLowerCase();return e[b]=e[b]||{},e[b][c]?(f.push(a.name),null):(e[b][c]=!0,a)}).filter(Boolean);f.length&&JqueryUtil.doToast({type:"warning",content:`Ignored ${f.length} duplicate entr${1===f.length?"y":"ies"}`});const h=g.map(a=>{const c=(BrewUtil.homebrew[b]||[]).findIndex(b=>b.name.toLowerCase()===a.name.toLowerCase()&&b.source.toLowerCase()===a.source.toLowerCase());return~c?{isOverwrite:!0,ix:c,entry:a}:{entry:a,isOverwrite:!1}}).filter(Boolean),i=h.map(a=>a.isOverwrite).filter(Boolean);if(i.length&&!confirm(`This will overwrite ${i.length} entr${1===i.length?"y":"ies"}. Are you sure?`))return;await Promise.all(h.map(a=>a.isOverwrite?BrewUtil.pUpdateEntryByIx(b,a.ix,MiscUtil.copy(a.entry)):BrewUtil.pAddEntry(b,MiscUtil.copy(a.entry)))),JqueryUtil.doToast({type:"success",content:`Saved!`}),Omnisearch.pAddToIndex("monster",h.filter(a=>!a.isOverwrite).map(a=>a.entry))}catch(a){JqueryUtil.doToast({content:`Current output was not valid JSON!`,type:"danger"}),setTimeout(()=>{throw a})}else JqueryUtil.doToast({content:"Nothing to save!",type:"danger"})}),c=()=>{b.toggleClass("hidden",!this.activeConverter.canSaveLocal)};this._addHookBase("converter",c),c(),$(`#download`).click(()=>{const a=this._outText;if(a&&a.trim())try{const b=this.activeConverter.prop,c={[b]:JSON.parse(`[${a}]`)};DataUtil.userDownload(`converter-output`,c)}catch(b){JqueryUtil.doToast({content:`Current output was not valid JSON. Downloading as <span class="code">.txt</span> instead.`,type:"warning"}),DataUtil.userDownloadText(`converter-output.txt`,a),setTimeout(()=>{throw b})}else JqueryUtil.doToast({content:"Nothing to download!",type:"danger"})});const d=a=>{try{$(`#lastWarnings`).hide().html(""),$(`#lastError`).hide().html(""),this._editorOut.resize(),a()}catch(a){const b=a.stack.split("\n"),c=1<b.length?b[1].trim():"(Unknown location)",d=`[Error] ${a.message} ${c}`;$(`#lastError`).show().html(d),this._editorOut.resize(),setTimeout(()=>{throw a})}},e=a=>{d(()=>{if(!(a&&this._state.hasAppended&&!confirm("You're about to overwrite multiple entries. Are you sure?"))){const b=(this._state.inputSeparator?this.inText.split(this._state.inputSeparator):[this.inText]).map(a=>a.trim()).filter(Boolean);return b.length?void b.reverse().forEach((b,c)=>{this.activeConverter.handleParse(b,this.doCleanAndOutput.bind(this),this.showWarning.bind(this),a||0!==c)}):this.showWarning("No input!")}})};$("#parsestatblock").on("click",()=>e(!1)),$(`#parsestatblockadd`).on("click",()=>e(!0)),this.initSideMenu(),window.dispatchEvent(new Event("toolsLoaded"))}initSideMenu(){const a=$(`.sidemenu`),b=ComponentUiUtil.$getSelEnum(this,"converter",{values:["Creature","Table"],html:`<select class="form-control input-sm"/>`});$$`<div class="sidemenu__row split-v-center"><div class="sidemenu__row__label">Mode</div>${b}</div>`.appendTo(a),ConverterUiUtil.renderSideMenuDivider(a);const c=ComponentUiUtil.$getIptStr(this,"inputSeparator",{html:`<input class="form-control input-sm">`}).addClass("code");$$`<div class="sidemenu__row split-v-center"><div class="sidemenu__row__label help mr-2" title="A separator used to mark the end of one to-be-converted entity (creature, spell, etc.) so that multiple entities can be converted in one run. If left blank, the entire input text will be parsed as one entity.">Separator</div>${c}</div>`.appendTo(a),ConverterUiUtil.renderSideMenuDivider(a);const d=$(`<div class="w-100 flex-col"/>`).appendTo(a);Object.keys(this._converters).sort(SortUtil.ascSortLower).forEach(a=>this._converters[a].renderSidebar(this.getPod(),d))}showWarning(a){$(`#lastWarnings`).show().append(`<div>[Warning] ${a}</div>`),this._editorOut.resize()}doCleanAndOutput(a,b){const c=CleanUtil.getCleanJson(a);b?(this._outText=`${c},\n${this._outText}`,this._state.hasAppended=!0):(this._outText=c,this._state.hasAppended=!1)}set _outReadOnly(a){this._editorOut.setOptions({readOnly:a})}get _outText(){return this._editorOut.getValue()}set _outText(a){return this._editorOut.setValue(a,-1)}get inText(){return CleanUtil.getCleanString((this._editorIn.getValue()||"").trim(),!1)}set inText(a){return this._editorIn.setValue(a,-1)}_getDefaultState(){return MiscUtil.copy(ConverterUi._DEFAULT_STATE)}}ConverterUi.STORAGE_INPUT="converterInput",ConverterUi.STORAGE_STATE="converterState",ConverterUi._DEFAULT_STATE={hasAppended:!1,converter:"Creature",sourceJson:"",inputSeparator:"==="};async function doPageInit(){ExcludeUtil.pInitialise();const[a,b]=await Promise.all([SpellcastingTraitConvert.pGetSpellData(),Renderer.item.pBuildList(),BrewUtil.pAddBrewData()]);SpellcastingTraitConvert.init(a),AcConvert.init(b);const c=new ConverterUi,d=new SpellConverter(c),e=new CreatureConverter(c),f=new TableConverter(c);return c.converters={[d.converterId]:d,[e.converterId]:e,[f.converterId]:f},c.pInit()}