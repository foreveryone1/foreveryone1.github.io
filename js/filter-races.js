"use strict";class PageFilterRaces extends PageFilter{static getLanguageProficiencyTags(a){if(!a)return[];const b=new Set;return a.forEach(a=>{Object.keys(a).filter(a=>"choose"!==a).forEach(a=>b.add(a.toTitleCase())),a.choose&&b.add("Choose")}),[...b]}static getAbilityObjs(a){function b(a,b){return{asi:a,amount:b,_toIdString:()=>`${a}${b}`}}const c=new CollectionUtil.ObjectSet;return(a||[]).forEach(a=>{if(a.choose){const d=a.choose;if(d.weighted)d.weighted.from.forEach(a=>{d.weighted.weights.forEach(d=>{c.add(b(a,d))})});else{const a=d.amount||1;d.from.forEach(d=>c.add(b(d,a)))}}Object.keys(a).filter(a=>"choose"!==a).forEach(d=>c.add(b(d,a[d])))}),Array.from(c.values())}static mapAbilityObjToFull(a){return`${Parser.attAbvToFull(a.asi)} ${0>a.amount?"":"+"}${a.amount}`}static getSpeedRating(a){return 30<a?"Walk (Fast)":30>a?"Walk (Slow)":"Walk"}static filterAscSortSize(c,d){function e(a){return"M"===a?0:"S"===a?-1:"V"===a?1:void 0}return c=c.item,d=d.item,SortUtil.ascSort(e(c),e(d))}static filterAscSortAsi(c,d){if(c=c.item,d=d.item,"Player Choice"===c)return-1;if(c.startsWith("Any")&&d.startsWith("Any")){const a=c.replace("Any","").replace("Increase","").trim(),b=d.replace("Any","").replace("Increase","").trim();return PageFilterRaces.ASI_SORT_POS[a]-PageFilterRaces.ASI_SORT_POS[b]}if(c.startsWith("Any"))return-1;if(d.startsWith("Any"))return 1;else{const[a,b]=c.split(" "),[e,f]=d.split(" ");return PageFilterRaces.ASI_SORT_POS[a]-PageFilterRaces.ASI_SORT_POS[e]||+f-+b}}constructor(){super();const a=new Filter({header:"Size",displayFn:Parser.sizeAbvToFull,itemSortFn:PageFilterRaces.filterAscSortSize}),b=new Filter({header:"Ability Bonus (Including Subrace)",items:["Player Choice","Any Strength Increase","Any Dexterity Increase","Any Constitution Increase","Any Intelligence Increase","Any Wisdom Increase","Any Charisma Increase","Strength +2","Strength +1","Dexterity +2","Dexterity +1","Constitution +2","Constitution +1","Intelligence +2","Intelligence +1","Wisdom +2","Wisdom +1","Charisma +2","Charisma +1"],itemSortFn:PageFilterRaces.filterAscSortAsi}),c=new Filter({header:"Base Race"}),d=new Filter({header:"Speed",items:["Climb","Fly","Swim","Walk (Fast)","Walk","Walk (Slow)"]}),e=new Filter({header:"Traits",items:["Amphibious","Armor Proficiency","Damage Resistance","Darkvision","Superior Darkvision","Dragonmark","Improved Resting","Monstrous Race","Natural Armor","NPC Race","Powerful Build","Skill Proficiency","Spellcasting","Tool Proficiency","Unarmed Strike","Uncommon Race","Weapon Proficiency"],deselFn:a=>"NPC Race"===a}),f=new Filter({header:"Languages",items:["Abyssal","Celestial","Choose","Common","Draconic","Dwarvish","Elvish","Giant","Gnomish","Goblin","Halfling","Infernal","Orc","Other","Primordial","Sylvan","Undercommon"],umbrellaItems:["Choose"]}),g=new Filter({header:"Miscellaneous",items:["Base Race","SRD"]});this._sizeFilter=a,this._asiFilter=b,this._baseRaceFilter=c,this._speedFilter=d,this._traitFilter=e,this._languageFilter=f,this._miscFilter=g}mutateForFilters(a){if(a.ability){const b=PageFilterRaces.getAbilityObjs(a.ability);a._fAbility=b.map(b=>PageFilterRaces.mapAbilityObjToFull(b));const c={};b.filter(a=>0<a.amount).forEach(a=>c[a.asi]=!0),Object.keys(c).forEach(b=>a._fAbility.push(`Any ${Parser.attAbvToFull(b)} Increase`)),a.ability.some(a=>a.choose)&&a._fAbility.push("Player Choice")}else a._fAbility=[];a._fSpeed=a.speed.walk?[a.speed.climb?"Climb":null,a.speed.fly?"Fly":null,a.speed.swim?"Swim":null,PageFilterRaces.getSpeedRating(a.speed.walk)].filter(a=>a):PageFilterRaces.getSpeedRating(a.speed),a._fTraits=[120===a.darkvision?"Superior Darkvision":a.darkvision?"Darkvision":null,a.hasSpellcasting?"Spellcasting":null].filter(a=>a),a._fTraits.push(...(a.traitTags||[])),a._fSources=ListUtil.getCompleteFilterSources(a),a._fLangs=PageFilterRaces.getLanguageProficiencyTags(a.languageProficiencies),a._fMisc=a.srd?["SRD"]:[],a._isBaseRace&&a._fMisc.push("Base Race");const b=a.ability?Renderer.getAbilityData(a.ability):{asTextShort:"None"};a._slAbility=b.asTextShort}addToFilters(a,b){b||(this._sourceFilter.addItem(a._fSources),this._sizeFilter.addItem(a.size),this._asiFilter.addItem(a._fAbility),this._baseRaceFilter.addItem(a._baseName))}async _pPopulateBoxOptions(a){a.filters=[this._sourceFilter,this._asiFilter,this._sizeFilter,this._speedFilter,this._traitFilter,this._languageFilter,this._baseRaceFilter,this._miscFilter]}toDisplay(a,b){return this._filterBox.toDisplay(a,b._fSources,b._fAbility,b.size,b._fSpeed,b._fTraits,b._fLangs,b._baseName,b._fMisc)}}PageFilterRaces.ASI_SORT_POS={Strength:0,Dexterity:1,Constitution:2,Intelligence:3,Wisdom:4,Charisma:5};