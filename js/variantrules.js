"use strict";class VariantRulesPage extends ListPage{constructor(){const a=new PageFilterVariantRules;super({dataSource:"data/variantrules.json",pageFilter:a,listClass:"variantrules",sublistClass:"subvariantrules",dataProps:["variantrule"]})}getListItem(a,b,c){this._pageFilter.mutateAndAddToFilters(a,c);const d=[];for(const e of a.entries)Renderer.getNames(d,e);const e=document.createElement("li");e.className=`row ${c?"row--blacklisted":""}`;const f=Parser.sourceJsonToAbv(a.source),g=UrlUtil.autoEncodeHash(a);e.innerHTML=`<a href="#${g}" class="lst--border">
			<span class="bold col-10 pl-0">${a.name}</span>
			<span class="col-2 text-center ${Parser.sourceJsonToColor(a.source)} pr-0" title="${Parser.sourceJsonToFull(a.source)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${f}</span>
		</a>`;const h=new ListItem(b,e,a.name,{hash:g,search:d.join(","),source:f},{uniqueId:a.uniqueId?a.uniqueId:b,isExcluded:c});return e.addEventListener("click",a=>this._list.doSelect(h,a)),e.addEventListener("contextmenu",a=>ListUtil.openContextMenu(a,this._list,h)),h}handleFilterChange(){const a=this._filterBox.getValues();this._list.filter(b=>this._pageFilter.toDisplay(a,this._dataList[b.ix])),FilterBox.selectFirstVisible(this._dataList)}getSublistItem(a,b){const c=UrlUtil.autoEncodeHash(a),d=$(`<li class="row"><a href="#${c}" class="lst--border"><span class="bold col-12 px-0">${a.name}</span></a></li>`).contextmenu(a=>ListUtil.openSubContextMenu(a,e)),e=new ListItem(b,d,a.name,{hash:c});return e}doLoadHash(a){const b=this._dataList[a];$("#pagecontent").empty().append(RenderVariantRules.$getRenderedVariantRule(b)),ListUtil.updateSelected()}async pDoLoadSubHash(a){if(a.length){a=this._filterBox.setFromSubHashes(a),await ListUtil.pSetFromSubHashes(a);const b=$(`.rd__h[data-title-index="${a[0]}"]`);b.length&&b[0].scrollIntoView()}}}const variantRulesPage=new VariantRulesPage;window.addEventListener("load",()=>variantRulesPage.pOnLoad());