"use strict";const STR_REPRINTED="reprinted";function unpackAlignment(a){if(a.alignment.sort(SortUtil.alignmentSort),2===a.alignment.length&&a.alignment.includes("N")){const b=[...a.alignment];return"N"===b[0]?b[0]="NX":b[1]="NY",b}return MiscUtil.copy(a.alignment)}class DeitiesPage extends ListPage{constructor(){const a=SourceFilter.getInstance(),b=new Filter({header:"Pantheon",items:["Celtic","Dawn War","Dragonlance","Drow","Dwarven","Eberron","Egyptian","Elven","Faer\xFBnian","Forgotten Realms","Gnomish","Greek","Greyhawk","Halfling","Nonhuman","Norse","Orc"]}),c=new Filter({header:"Category",items:[STR_NONE,"Other Faiths of Eberron","The Dark Six","The Gods of Evil","The Gods of Good","The Gods of Neutrality","The Sovereign Host"],itemSortFn:null}),d=new Filter({header:"Alignment",items:["L","NX","C","G","NY","E","N"],displayFn:Parser.alignmentAbvToFull,itemSortFn:null}),e=new Filter({header:"Domain",items:["Arcana","Death","Forge","Grave","Knowledge","Life","Light","Nature",STR_NONE,"Order","Tempest","Trickery","War"]}),f=new Filter({header:"Miscellaneous",items:[STR_REPRINTED,"SRD"],displayFn:StrUtil.uppercaseFirst,deselFn:a=>a===STR_REPRINTED});super({dataSource:DataUtil.deity.loadJSON,filters:[a,d,b,c,e,f],filterSource:a,listClass:"deities",sublistClass:"subdeities",dataProps:["deity"]}),this._sourceFilter=a,this._pantheonFilter=b,this._categoryFilter=c}getListItem(a,b,c){a._fAlign=a.alignment?unpackAlignment(a):[],a.category||(a.category=STR_NONE),a.domains||(a.domains=[STR_NONE]),a.domains.sort(SortUtil.ascSort),a._fMisc=a.reprinted?[STR_REPRINTED]:[],a.srd&&a._fMisc.push("SRD"),c||(this._sourceFilter.addItem(a.source),this._pantheonFilter.addItem(a.pantheon),this._categoryFilter.addItem(a.category));const d=document.createElement("li");d.className=`row ${c?"row--blacklisted":""}`;const e=Parser.sourceJsonToAbv(a.source),f=UrlUtil.autoEncodeHash(a),g=a.alignment?a.alignment.join(""):"\u2014",h=a.domains.join(", ");d.innerHTML=`<a href="#${f}" class="lst--border">
			<span class="bold col-3 pl-0">${a.name}</span>
			<span class="col-2 text-center">${a.pantheon}</span>
			<span class="col-2 text-center">${g}</span>
			<span class="col-3 ${a.domains[0]===STR_NONE?`list-entry-none`:""}">${h}</span>
			<span class="col-2 text-center ${Parser.sourceJsonToColor(a.source)} pr-0" title="${Parser.sourceJsonToFull(a.source)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${e}</span>
		</a>`;const i=new ListItem(b,d,a.name,{hash:f,source:e,pantheon:a.pantheon,alignment:g,domains:h},{uniqueId:a.uniqueId?a.uniqueId:b,isExcluded:c});return d.addEventListener("click",a=>this._list.doSelect(i,a)),d.addEventListener("contextmenu",a=>ListUtil.openContextMenu(a,this._list,i)),i}handleFilterChange(){const a=this._filterBox.getValues();this._list.filter(b=>{const c=this._dataList[b.ix];return this._filterBox.toDisplay(a,c.source,c._fAlign,c.pantheon,c.category,c.domains,c._fMisc)}),FilterBox.selectFirstVisible(this._dataList)}getSublistItem(a,b){const c=UrlUtil.autoEncodeHash(a),d=a.alignment?a.alignment.join(""):"\u2014",e=a.domains.join(", "),f=$(`<li class="row">
			<a href="#${c}" class="lst--border">
				<span class="bold col-4 pl-0">${a.name}</span>
				<span class="col-2">${a.pantheon}</span>
				<span class="col-2">${d}</span>
				<span class="col-4 ${a.domains[0]===STR_NONE?`list-entry-none`:""} pr-0">${e}</span>
			</a>
		</li>`).contextmenu(a=>ListUtil.openSubContextMenu(a,g)),g=new ListItem(b,f,a.name,{hash:c,pantheon:a.pantheon,alignment:d,domains:e});return g}doLoadHash(a){const b=this._dataList[a];$(`#pagecontent`).empty().append(RenderDeities.$getRenderedDeity(b)),ListUtil.updateSelected()}async pDoLoadSubHash(a){a=this._filterBox.setFromSubHashes(a),await ListUtil.pSetFromSubHashes(a)}}const deitiesPage=new DeitiesPage;window.addEventListener("load",()=>deitiesPage.pOnLoad());