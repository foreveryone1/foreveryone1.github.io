"use strict";class VehiclesPage extends ListPage{constructor(){const a=SourceFilter.getInstance();super({dataSource:"data/vehicles.json",dataSourceFluff:"data/fluff-vehicles.json",filters:[a],filterSource:a,listClass:"vehicles",sublistClass:"subvehicles",dataProps:["vehicle"]}),this._sourceFilter=a}getListItem(a,b,c){c||this._sourceFilter.addItem(a.source);const d=document.createElement("li");d.className=`row ${c?"row--blacklisted":""}`;const e=Parser.sourceJsonToAbv(a.source),f=UrlUtil.autoEncodeHash(a);d.innerHTML=`<a href="#${UrlUtil.autoEncodeHash(a)}" class="lst--border">
			<span class="bold col-10 pl-0">${a.name}</span>
			<span class="col-2 text-center ${Parser.sourceJsonToColor(a.source)} pr-0" title="${Parser.sourceJsonToFull(a.source)}" ${BrewUtil.sourceJsonToStyle(a.source)}>${e}</span>
		</a>`;const g=new ListItem(b,d,a.name,{hash:f,source:e},{uniqueId:a.uniqueId?a.uniqueId:b,isExcluded:c});return d.addEventListener("click",a=>this._list.doSelect(g,a)),d.addEventListener("contextmenu",a=>ListUtil.openContextMenu(a,this._list,g)),g}handleFilterChange(){const a=this._filterBox.getValues();this._list.filter(b=>{const c=this._dataList[b.ix];return this._filterBox.toDisplay(a,c.source)}),FilterBox.selectFirstVisible(this._dataList)}getSublistItem(a,b){const c=UrlUtil.autoEncodeHash(a),d=$(`<li class="row"><a href="#${c}" class="lst--border"><span class="name col-12 px-0">${a.name}</span></a></li>`).contextmenu(a=>ListUtil.openSubContextMenu(a,e)),e=new ListItem(b,d,a.name,{hash:c});return e}doLoadHash(a){function b(a){return Renderer.utils.pBuildFluffTab(a,d,c,a=>c.fluff||a.vehicleFluff.find(a=>a.name===c.name&&a.source===c.source),`data/fluff-vehicles.json`,()=>!0)}Renderer.get().setFirstSection(!0);const c=this._dataList[a],d=$(`#pagecontent`).empty(),e=$(`#float-token`).empty(),f=Renderer.utils.tabButton("Item",()=>e.show(),function(){if(c.tokenUrl||!c.uniqueId){const a=c.tokenUrl||UrlUtil.link(`img/vehicles/tokens/${Parser.sourceJsonToAbv(c.source)}/${c.name.replace(/"/g,"")}.png`);e.append(`<a href="${a}" target="_blank" rel="noopener noreferrer">
					<img src="${a}" id="token_image" class="token" onerror="TokenUtil.imgError(this)" alt="${c.name}">
				</a>`)}else TokenUtil.imgError();d.append(RenderVehicles.$getRenderedVehicle(c))}),g=Renderer.utils.tabButton("Info",()=>e.hide(),b),h=Renderer.utils.tabButton("Images",()=>e.hide(),()=>b(!0));Renderer.utils.bindTabButtons(f,g,h),ListUtil.updateSelected()}async pDoLoadSubHash(a){a=this._filterBox.setFromSubHashes(a),await ListUtil.pSetFromSubHashes(a)}}const vehiclesPage=new VehiclesPage;window.addEventListener("load",()=>vehiclesPage.pOnLoad());