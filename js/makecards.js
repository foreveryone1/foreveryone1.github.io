"use strict";class MakeCards extends BaseComponent{static async pInit(){MakeCards._=new MakeCards,await MakeCards.utils.pLoadReducedData(),await MakeCards._.pInit(),window.dispatchEvent(new Event("toolsLoaded"))}constructor(){super(),this._list=null,this._modalFilterItems=new ModalFilterItems("makecards.items"),this._modalFilterBestiary=new ModalFilterBestiary("makecards.bestiary"),this._modalFilterSpells=new ModalFilterSpells("makecards.spells"),this._doSaveStateDebounced=MiscUtil.debounce(()=>this._pDoSaveState(),50)}async pInit(){await SearchUiUtil.pDoGlobalInit(),SearchWidget.pDoGlobalInit(),await this._pDoLoadState(),this.render()}render(){this._addHookAll("state",()=>this._doSaveStateDebounced()),this._render_configSection(),this._render_cardList()}_render_configSection(){const a=$(`#wrp_config`).empty();$(`<h5>New Card Defaults</h5>`).appendTo(a),$(`<div class="flex-v-center bold">
			<div class="col-4 text-center pr-2">Type</div>
			<div class="col-4 text-center p-2">Color</div>
			<div class="col-4 text-center pl-2">Icon</div>
		</div>`).appendTo(a);const b=a=>{const b=MakeCards._AVAILABLE_TYPES[a],c=`icon_${a}`,d=ComponentUiUtil.$getIptColor(this,`color_${a}`).addClass("cards-cfg__ipt-color"),e=$(`<div class="cards__disp-btn-icon"/>`),f=$$`<button class="btn btn-xs btn-default cards__btn-choose-icon">${e}</button>`.click(async()=>{const a=await MakeCards._pGetUserIcon(this._state[c]);a&&(this._state[c]=a)}),g=()=>e.css("background-image",`url('${MakeCards._getIconPath(this._state[c])}')`);return this._addHookBase(c,g),g(),$$`<div class="flex-v-center stripe-even m-1">
				<div class="col-4 flex-vh-center pr-2">${b.searchTitle}</div>
				<div class="col-4 flex-vh-center p-2">${d}</div>
				<div class="col-4 flex-vh-center pl-2">${f}</div>
			</div>`};Object.keys(MakeCards._AVAILABLE_TYPES).forEach(c=>b(c).appendTo(a))}_render_cardList(){const a=$(`#wrp_main`).empty(),b=ContextUtil.getNextGenericMenuId(),c=this._render_getContextMenuOptions();ContextUtil.doInitActionContextMenu(b,c);const d=$(`<input type="search" class="form-control mr-2" placeholder="Search cards...">`),e=$(`<button class="btn btn-primary mr-2"><span class="glyphicon glyphicon-plus"/> Add</button>`).click(a=>ContextUtil.handleOpenContextMenu(a,e,b)),f=$(`<button class="btn btn-danger mr-2"><span class="glyphicon glyphicon-trash"/> Reset</button>`).click(()=>{confirm("Are you sure?")&&(this._list.removeAllItems(),this._list.update(),this._doSaveStateDebounced())}),g=$(`<button class="btn btn-default"><span class="glyphicon glyphicon-download"/> Export JSON</button>`).click(()=>{const a=this._list.items.map(a=>{const b=MakeCards._AVAILABLE_TYPES[a.values.entityType];return{count:a.values.count,color:a.values.color,title:a.name,icon:a.values.icon,icon_back:a.values.icon,contents:b.fnGetContents(a.values.entity),tags:b.fnGetTags(a.values.entity)}});DataUtil.userDownload("rpg-cards",a)});$$`<div class="w-100 no-shrink flex-v-center mb-3">${d}${e}${f}${g}</div>`.appendTo(a);const h=()=>{const a=this._list.visibleItems.filter(a=>a.data.$cbSel.prop("checked"));return a.length?a:(JqueryUtil.doToast({content:"Please select some cards first!",type:"warning"}),null)},i=ContextUtil.getNextGenericMenuId(),j=[new ContextUtil.Action("Set Color",async()=>{const a=h();if(!a)return;const b=await InputUiUtil.pGetUserColor({default:MiscUtil.randomColor()});b&&a.forEach(a=>a.data.setColor(b))}),new ContextUtil.Action("Set Icon",async()=>{const a=h();if(!a)return;const b=await MakeCards._pGetUserIcon();b&&a.forEach(a=>a.data.setIcon(b))}),new ContextUtil.Action("Remove",async()=>{const a=h();a&&(a.forEach(a=>this._list.removeItem(a.ix)),this._list.update(),this._doSaveStateDebounced())})];ContextUtil.doInitActionContextMenu(i,j);const k=$(`<button class="btn btn-xs btn-default" title="Carry out actions on selected cards">Mass...</button>`).click(a=>ContextUtil.handleOpenContextMenu(a,k,i));$$`<div class="w-100 no-shrink flex-v-center mb-2">${k}</div>`.appendTo(a);const l=$(`<input type="checkbox" title="Select All">`).click(()=>{const a=l.prop("checked");this._list.visibleItems.forEach(b=>b.data.$cbSel.prop("checked",a))});$$`<div class="w-100 no-shrink flex-v-center bold">
			<div class="col-1 mr-2 flex-vh-center">${l}</div>
			<div class="col-3 mr-2 flex-vh-center">Name</div>
			<div class="col-1-5 mr-2 flex-vh-center">Source</div>
			<div class="col-1-5 mr-2 flex-vh-center">Type</div>
			<div class="col-1-1 mr-2 flex-vh-center">Color</div>
			<div class="col-1-1 mr-2 flex-vh-center">Icon</div>
			<div class="col-1 mr-2 flex-vh-center">Count</div>
			<div class="col-1-1 flex-v-center flex-h-right"/>
		</div>`.appendTo(a);const m=$(`<div class="w-100 h-100"/>`);$$`<div class="flex-col h-100 w-100 overflow-y-auto mt-2 overflow-x-hidden">${m}</div>`.appendTo(a),this._list=new List({$iptSearch:d,$wrpList:m,isUseJquery:!0}),this._list.init()}_render_getContextMenuOptions(){return[...this._render_getContextMenuOptionsSearch(),null,...this._render_getContextMenuOptionsFilter(),null,...this._render_getContextMenuOptionsSublist()]}_render_getContextMenuOptionsSearch(){return Object.entries(MakeCards._AVAILABLE_TYPES).map(([a,b])=>new ContextUtil.Action(`Search for ${b.searchTitle}`,async()=>{const c=await b.pFnSearch();if(c){const b=this._list.items.find(a=>a.values.page===c.page&&a.values.source===c.source&&a.values.hash===c.hash);if(b)return b.values.count++,b.data.$iptCount.val(b.values.count),this._doSaveStateDebounced();const d=await this._pGetListItem({page:c.page,source:c.source,hash:c.hash,entityType:a},!0);this._list.addItem(d),this._list.update(),this._doSaveStateDebounced()}}))}_render_getContextMenuOptionsFilter(){return Object.entries(MakeCards._AVAILABLE_TYPES).map(([a,b])=>new ContextUtil.Action(`Filter for ${b.searchTitle}`,async()=>{const c=(()=>{switch(a){case"creature":return this._modalFilterBestiary;case"item":return this._modalFilterItems;case"spell":return this._modalFilterSpells;default:throw new Error(`Unhandled branch!`);}})(),d=await c.pGetUserSelection();if(null!=d&&d.length){const c=d.length;for(let e=0;e<c;++e){const c=d[e],f=await this._pGetListItem({page:b.page,source:c.values.sourceJson,hash:c.values.hash,entityType:a},!0);this._list.addItem(f)}this._list.update(),this._doSaveStateDebounced()}}))}_render_getContextMenuOptionsSublist(){return Object.entries(MakeCards._AVAILABLE_TYPES).map(([a,b])=>new ContextUtil.Action(`Load from ${b.pageTitle}${b.isPageTitleSkipSuffix?"":" Page"} Pinned List`,async()=>{const c=StorageUtil.getPageKey("sublist",b.page),d=await StorageUtil.pGet(c);if(!(d&&d.items&&d.items.length))return JqueryUtil.doToast({content:"Nothing to add! Please visit the page and add/pin some data first.",type:"warning"});const e=await Promise.all(d.items.map(c=>{const[d,e]=c.h.split(HASH_PART_SEP)[0].split(HASH_LIST_SEP);return this._pGetListItem({page:b.page,source:e,hash:c.h,entityType:a},!0)}));e.forEach(a=>this._list.addItem(a)),this._list.update(),this._doSaveStateDebounced()}))}_getStateForType(a){const b=this._state[`color_${a}`],c=this._state[`icon_${a}`];return{color:b,icon:c}}async _pGetListItem(a,b){const c=CryptUtil.uid();if(b){const{color:b,icon:c}=this._getStateForType(a.entityType);a.color=a.color||b,a.icon=a.icon||c}a.count=a.count||1;const d=await Renderer.hover.pCacheAndGet(a.page,a.source,a.hash),e=$(`<input type="checkbox">`),f=$(`<input type="color" class="form-control input-xs form-control--minimal">`).val(a.color).change(()=>g(f.val())),g=a=>{f.val(a),o.values.color=a,this._doSaveStateDebounced()},h=$(`<div class="cards__disp-btn-icon"/>`).css("background-image",`url('${MakeCards._getIconPath(a.icon)}')`),i=$$`<button class="btn btn-default btn-xs cards__btn-choose-icon">${h}</button>`.click(async()=>{const a=await MakeCards._pGetUserIcon();a&&j(a)}),j=a=>{o.values.icon=a,h.css("background-image",`url('${MakeCards._getIconPath(a)}')`),this._doSaveStateDebounced()},k=$(`<input class="form-control form-control--minimal input-xs text-center">`).change(()=>{const a=UiUtil.strToInt(k.val(),1,{min:1,fallbackOnNaN:1});o.values.count=a,k.val(a),this._doSaveStateDebounced()}).val(a.count),l=$(`<button class="btn btn-default btn-xs mr-2" title="Copy JSON (SHIFT to view JSON)"><span class="glyphicon glyphicon-copy"/></button>`).click(async a=>{const b=MakeCards._AVAILABLE_TYPES[o.values.entityType],c={count:o.values.count,color:o.values.color,title:o.name,icon:o.values.icon,icon_back:o.values.icon,contents:b.fnGetContents(o.values.entity),tags:b.fnGetTags(o.values.entity)};if(a.shiftKey){const b=Renderer.hover.$getHoverContent_statsCode(c);Renderer.hover.getShowWindow(b,Renderer.hover.getWindowPositionFromEvent(a),{title:`Card Data \u2014 ${o.name}`,isPermanent:!0,isBookContent:!0})}else await MiscUtil.pCopyTextToClipboard(JSON.stringify(c,null,2)),JqueryUtil.showCopiedEffect(l,"Copied JSON!")}),m=$(`<button class="btn btn-danger btn-xs" title="Remove"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{this._list.removeItem(c),this._list.update(),this._doSaveStateDebounced()}),n=$$`<label class="flex-v-center my-1 w-100 lst--border">
			<div class="col-1 mr-2 flex-vh-center">${e}</div>
			<div class="col-3 mr-2 flex-v-center">${d.name}</div>
			<div class="col-1-5 mr-2 flex-vh-center ${Parser.sourceJsonToColor(d.source)}" title="${Parser.sourceJsonToFull(d.source)}" ${BrewUtil.sourceJsonToStyle(d.source)}>${Parser.sourceJsonToAbv(d.source)}</div>
			<div class="col-1-5 mr-2 flex-vh-center">${a.entityType.toTitleCase()}</div>
			<div class="col-1-1 mr-2 flex-vh-center">${f}</div>
			<div class="col-1-1 mr-2 flex-vh-center">${i}</div>
			<div class="col-1 mr-2 flex-vh-center">${k}</div>
			<div class="col-1-1 flex-v-center flex-h-right">${l}${m}</div>
		</label>`,o=new ListItem(c,n,d.name,{page:a.page,hash:a.hash,source:a.source,color:a.color,icon:a.icon,count:a.count,entityType:a.entityType,entity:d},{$cbSel:e,$iptCount:k,setColor:g,setIcon:j});return o}static _ct_subtitle(a){return`subtitle | ${a}`}static _ct_rule(){return`rule`}static _ct_property(a,b){return`property | ${a} | ${b}`}static _ct_fill(a){return`fill ${a}`}static _ct_text(a){return`text | ${a}`}static _ct_section(a){return`section | ${a}`}static _ct_description(a,b){return`description | ${a} | ${b}`}static _ct_bullet(a){return`bullet | ${a}`}static _ct_boxes(a,b=1.2){return`boxes | ${a} | ${b}`}static _ct_dndstats(...a){return`dndstats | ${a.join(" | ")}`}static _ct_htmlToText(a){return $(`<div>${a}</div>`).text().trim()}static _ct_renderEntries(a,b=0){return a&&a.length?a.map(a=>{const c=a.rendered||RendererCard.get().render(a,b);return c.split("\n").filter(Boolean)}).flat():[]}static _getCardContents_creature(a){const b=RendererCard.get(),c=Renderer.monster.getOrderedTraits(a,b);return[this._ct_subtitle(Renderer.monster.getTypeAlignmentPart(a)),this._ct_rule(),this._ct_property("Armor class",this._ct_htmlToText(Parser.acToFull(a.ac))),this._ct_property("Hit points",this._ct_htmlToText(Renderer.monster.getRenderedHp(a.hp))),this._ct_property("Speed",this._ct_htmlToText(Parser.getSpeedString(a))),this._ct_rule(),this._ct_dndstats(...Parser.ABIL_ABVS.map(b=>a[b])),this._ct_rule(),a.save?this._ct_property("Saving Throws",this._ct_htmlToText(Renderer.monster.getSavesPart(a))):null,a.skill?this._ct_property("Skills",this._ct_htmlToText(Renderer.monster.getSkillsString(Renderer.get(),a))):null,a.vulnerable?this._ct_property("Damage Vulnerabilities",this._ct_htmlToText(Parser.monImmResToFull(a.vulnerable))):null,a.resist?this._ct_property("Damage Resistances",this._ct_htmlToText(Parser.monImmResToFull(a.resist))):null,a.immune?this._ct_property("Damage Immunities",this._ct_htmlToText(Parser.monImmResToFull(a.immune))):null,a.conditionImmune?this._ct_property("Condition Immunities",this._ct_htmlToText(Parser.monCondImmToFull(a.conditionImmune))):null,this._ct_property("Senses",this._ct_htmlToText(Renderer.monster.getSensesPart(a))),this._ct_property("Languages",this._ct_htmlToText(Renderer.monster.getRenderedLanguages(a.languages))),this._ct_property("Challenge",this._ct_htmlToText(Parser.monCrToFull(a.cr))),this._ct_rule(),...(c?this._ct_renderEntries(c,2):[]),a.action?this._ct_section("Actions"):null,...(a.action?this._ct_renderEntries(a.action,2):[]),a.reaction?this._ct_section("Reactions"):null,...(a.reaction?this._ct_renderEntries(a.reaction,2):[]),a.legendary?this._ct_section("Legendary Actions"):null,a.legendary?this._ct_text(this._ct_htmlToText(Renderer.monster.getLegendaryActionIntro(a))):null,...(a.legendary?this._ct_renderEntries(a.legendary,2):[])].filter(Boolean)}static _getCardContents_spell(a){const b=a.entriesHigherLevel?(()=>{const b=1===a.entriesHigherLevel.length&&a.entriesHigherLevel[0].name&&"at higher levels"===a.entriesHigherLevel[0].name.toLowerCase()?a.entriesHigherLevel[0].entries:a.entriesHigherLevel;return[this._ct_section("At higher levels"),...this._ct_renderEntries(b,2)]})():null;return[this._ct_subtitle(Parser.spLevelSchoolMetaToFull(a.level,a.school,a.meta,a.subschools)),this._ct_rule(),this._ct_property("Casting Time",Parser.spTimeListToFull(a.time)),this._ct_property("Range",Parser.spRangeToFull(a.range)),this._ct_property("Components",Parser.spComponentsToFull(a.components,a.level)),this._ct_property("Duration",Parser.spDurationToFull(a.duration)),this._ct_rule(),...this._ct_renderEntries(a.entries,2),...(b||[])].filter(Boolean)}static _getCardContents_item(a){MakeCards.utils.enhanceItemAlt(a);const[b,c,d]=Renderer.item.getDamageAndPropertiesText(a),e=[Parser.itemValueToFull(a),Parser.itemWeightToFull(a)].filter(Boolean).join(", ").uppercaseFirst(),f=this._ct_htmlToText([b,c,d].filter(Boolean).join(" ")),g=[];return(a._fullEntries||a.entries&&a.entries.length)&&g.push(...(a._fullEntries||a.entries)),(a._fullAdditionalEntries||a.additionalEntries)&&g.push(...(a._fullAdditionalEntries||a.additionalEntries)),[this._ct_subtitle(Renderer.item.getTypeRarityAndAttunementText(a)),e||f?this._ct_rule():null,e?this._ct_text(e):null,f?this._ct_text(f):null,g.length?this._ct_rule():null,...this._ct_renderEntries(g,2),a.charges?this._ct_boxes(a.charges):null].filter(Boolean)}static _getIconPath(a){return class_icon_names.includes(a)?`https://raw.githubusercontent.com/crobi/rpg-cards/master/generator/img/classes/${a.split("-")[1]}.png`:`https://raw.githubusercontent.com/crobi/rpg-cards/master/generator/img/${a}.png`}static _pGetUserIcon(a){return new Promise(b=>{const c=$(`<input class="form-control mb-2">`).keydown(async a=>{await MiscUtil.pDelay(17);e.find(`.typeahead.dropdown-menu`).is(":visible")||(13===a.which&&f(!0),a.stopPropagation())});a&&c.val(a),c.typeahead({source:icon_names,items:"16",fnGetItemPrefix:a=>`<span class="cards__disp-typeahead-icon mr-2" style="background-image: url('${MakeCards._getIconPath(a)}')"/> `});const d=$(`<button class="btn btn-default">Confirm</button>`).click(()=>f(!0)),{$modalInner:e,doClose:f}=UiUtil.getShowModal({title:"Enter Icon",noMinHeight:!0,cbClose:a=>{if(!a)return b(null);const d=c.val();return d.trim()?b(d):b(null)}});c.appendTo(e),$$`<div class="flex-vh-center">${d}</div>`.appendTo(e),c.focus(),c.select()})}async _pDoSaveState(){const a=this.getSaveableState();await StorageUtil.pSetForPage(MakeCards._STORAGE_KEY,a)}async _pDoLoadState(){const a=await StorageUtil.pGetForPage(MakeCards._STORAGE_KEY);null!=a&&this.setStateFrom(a)}getSaveableState(){return{state:this.getBaseSaveableState(),listItems:this._list.items.map(a=>({page:a.values.page,source:a.values.source,hash:a.values.hash,color:a.values.color,icon:a.values.icon,count:a.values.count,entityType:a.values.entityType}))}}setStateFrom(a){this.setBaseSaveableStateFrom(a.state),Promise.all(a.listItems.map(async a=>this._pGetListItem(a))).then(a=>{a.length&&(a.sort((c,a)=>SortUtil.ascSortLower(c.name,a.name)).forEach(a=>this._list.addItem(a)),this._list.update())})}_getDefaultState(){const a=MiscUtil.copy(MakeCards._DEFAULT_STATE);return Object.entries(MakeCards._AVAILABLE_TYPES).forEach(([b,c])=>{a[`color_${b}`]=c.colorDefault||MakeCards._DEFAULT_STATE,a[`icon_${b}`]=c.iconDefault||MakeCards._ICON_DEFAULT}),a}}MakeCards._DEFAULT_STATE={},MakeCards._COLOR_DEFAULT="#333333",MakeCards._ICON_DEFAULT="perspective-dice-six-faces-random",MakeCards._STORAGE_KEY="cardState",MakeCards._AVAILABLE_TYPES={creature:{searchTitle:"Creature",pageTitle:"Bestiary",isPageTitleSkipSuffix:!0,page:UrlUtil.PG_BESTIARY,colorDefault:"#008000",iconDefault:"imp-laugh",pFnSearch:SearchWidget.pGetUserCreatureSearch,fnGetContents:MakeCards._getCardContents_creature.bind(MakeCards),fnGetTags:a=>{const b=Parser.monTypeToFullObj(a.type),c=null==a.cr?"unknown CR":`CR ${a.cr.cr||a.cr}`;return["creature",Parser.sourceJsonToAbv(a.source),b.type,c,Parser.sizeAbvToFull(a.size)]}},item:{searchTitle:"Item",pageTitle:"Items",page:UrlUtil.PG_ITEMS,colorDefault:"#696969",iconDefault:"mixed-swords",pFnSearch:SearchWidget.pGetUserItemSearch,fnGetContents:MakeCards._getCardContents_item.bind(MakeCards),fnGetTags:a=>{const[b]=Renderer.item.getHtmlAndTextTypes(a);return["item",Parser.sourceJsonToAbv(a.source),...b]}},spell:{searchTitle:"Spell",pageTitle:"Spells",page:UrlUtil.PG_SPELLS,colorDefault:"#4a6898",iconDefault:"magic-swirl",pFnSearch:SearchWidget.pGetUserSpellSearch,fnGetContents:MakeCards._getCardContents_spell.bind(MakeCards),fnGetTags:a=>{const b=["spell",Parser.sourceJsonToAbv(a.source),Parser.spLevelToFullLevelText(a.level),Parser.spSchoolAbvToFull(a.school)];return a.duration.filter(a=>a.concentration).length&&b.push("concentration"),b}}},MakeCards._=null,window.addEventListener("load",()=>MakeCards.pInit()),MakeCards.utils=class{static async pLoadReducedData(){const a=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/makecards.json`);a.reducedItemProperty.forEach(a=>MakeCards.utils._addItemProperty(a)),a.reducedItemType.forEach(a=>{if("SHP"===a.abbreviation){const b=MiscUtil.copy(a);b.abbreviation="AIR",MakeCards.utils._addItemType(b)}MakeCards.utils._addItemType(a)})}static _addItemProperty(a){MakeCards.utils.itemPropertyMap[a.abbreviation]||(a.entries?MakeCards.utils.itemPropertyMap[a.abbreviation]=a.name?MiscUtil.copy(a):{name:a.entries[0].name.toLowerCase(),entries:a.entries}:MakeCards.utils.itemPropertyMap[a.abbreviation]={})}static _addItemType(a){MakeCards.utils.itemTypeMap[a.abbreviation]||(MakeCards.utils.itemTypeMap[a.abbreviation]=a.name?MiscUtil.copy(a):{name:a.entries[0].name.toLowerCase(),entries:a.entries})}static enhanceItemAlt(a){delete a._fullEntries,a.type&&(MakeCards.utils.itemPropertyMap[a.type]||Renderer.item.typeMap[a.type])&&(Renderer.item._initFullEntries(a),(MakeCards.utils.itemTypeMap[a.type]||Renderer.item.typeMap[a.type]).entries.forEach(b=>a._fullEntries.push(b))),a.property&&a.property.forEach(b=>{MakeCards.utils.itemPropertyMap[b]?MakeCards.utils.itemPropertyMap[b].entries&&(Renderer.item._initFullEntries(a),MakeCards.utils.itemPropertyMap[b].entries.forEach(b=>a._fullEntries.push(b))):Renderer.item.propertyMap[b].entries&&(Renderer.item._initFullEntries(a),Renderer.item.propertyMap[b].entries.forEach(b=>a._fullEntries.push(b)))}),"LA"===a.type||"MA"===a.type||"HA"===a.type?(a.resist&&(Renderer.item._initFullEntries(a),a._fullEntries.push(`Resistance to ${a.resist} damage.`)),a.stealth&&(Renderer.item._initFullEntries(a),a._fullEntries.push("Disadvantage on Stealth (Dexterity) checks.")),"HA"===a.type&&a.strength&&(Renderer.item._initFullEntries(a),a._fullEntries.push(`Speed reduced by 10 feet if Strength score less than ${a.strength}.`))):a.resist&&("P"===a.type&&(Renderer.item._initFullEntries(a),a._fullEntries.push(`Resistance to ${a.resist} damage for 1 hour.`)),"RG"===a.type&&(Renderer.item._initFullEntries(a),a._fullEntries.push(`Resistance to ${a.resist} damage.`))),"SCF"===a.type&&("arcane"===a.scfType&&(Renderer.item._initFullEntries(a),a._fullEntries.push("A sorcerer, warlock, or wizard can use this item as a spellcasting focus.")),"druid"===a.scfType&&(Renderer.item._initFullEntries(a),a._fullEntries.push("A druid can use this item as a spellcasting focus.")),"holy"===a.scfType&&(Renderer.item._initFullEntries(a),a._fullEntries.push("A cleric or paladin can use this item as a spellcasting focus.")))}},MakeCards.utils.itemTypeMap={},MakeCards.utils.itemPropertyMap={};